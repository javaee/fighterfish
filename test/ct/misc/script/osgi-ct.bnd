#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2013 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# This is a simple bnd instructions file that we use to run OSGi Compliance Tests.
# We use the same file for all test suites, viz: 
# org.osgi.test.cases.http, 
# org.osgi.test.cases.transaction, 
# org.osgi.test.cases.webcontainer, 
# org.osgi.test.cases.jdbc, 
# etc.
#
# This script uses following properties which are supplied to it from command line via -D properties:
#
# glassfish.home -  specifies where glassfish has been installed.
# ct.home - specifies where OSGi CT has been checked out
# ct.name - refers to the OSGi CT test suite that we want to run. e.g., http|transaction|webcontainer
#
# Author: sanjeeb.sahoo@oracle.com
# Date: 23 Feb 2013

-target = ${ct.home}/org.osgi.test.cases.${ct.name}/generated/org.osgi.test.cases.${ct.name}.jar;version=file

-runpath = \
       ${glassfish.home}/osgi/felix/bin/felix.jar;version=file, \
       ${java.home}/lib/tools.jar;version=file, \
       ${ct.home}/licensed/repo/com.springsource.junit/com.springsource.junit-3.8.2.jar;version=file;export="junit.framework;version=3.8"
       
# Ideally running glassfish.jar should be sufficient, but the CT assumes certain environment.
# So, we provision some additional bundles.
# javax.servlet-api_2.5 is needed for OSGi r4v42 HTTP CT as it expects javax.servlet 2.5 package.
# Although javax.servlet 3.0 is backward compatible, it can't wire to it.
# Similarly, org.osgi.impl.service.log-1.3.2.jar is needed for OSGi Web CT as GlassFish does not have a log service bundle
# and the CT requires a LogService to test certain scenarios. 
# test.ct.misc.bundle.delay.jar is needed for all CTs, because the CTs assume everything is immediately started,
# where as GlassFish starts all the OSGi services after its core services are started. So, this delay bundle
# introduces a 10 second delay so that CTs don't start running before services are available.
-runbundles = \
 ${user.home}/.m2/repository/org/glassfish/fighterfish/test.ct.misc.bundle.javax.servlet-api_2.5/1.0.0-SNAPSHOT/test.ct.misc.bundle.javax.servlet-api_2.5-1.0.0-SNAPSHOT.jar;version=file, \
 ${glassfish.home}/modules/glassfish.jar;version=file, \
 ${user.home}/.m2/repository/org/glassfish/fighterfish/test.ct.misc.bundle.delay/1.0.0-SNAPSHOT/test.ct.misc.bundle.delay-1.0.0-SNAPSHOT.jar;version=file
    
# Start VM in debug mode to allow us to easily attach a debugger.
# All options that are needed to start a debugger are passed in one string with ',' as a delim.
-runvm = -Xdebug,-Xnoagent,"-Djava.compiler=NONE","-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=localhost:9009"

# TODO: How to configure osgi cache dir location? 
# Specifying it using org.osgi.framework.storage in -runproperties does not work.

# com.sun.aas.installRoot is needed to successfully bootstrap GlassFish.
# org.osgi.framework.* properties are used to ensure we bootstrap correctly.
# org.osgi.service.http.*  and org.glassfish.osgihttp.ContextPath properties are needed for HTTP CT.
# osgi.support.multipleHosts and org.osgi.service.webcontainer.* properties are needed for Web CT
-runproperties = \
    com.sun.aas.installRoot=${glassfish.home}, \
    org.osgi.framework.bundle.parent=framework, \
    org.osgi.framework.storage.clean=onFirstInit, \
    org.osgi.service.http.hostname=127.0.0.1, \
    org.osgi.service.http.port=8080, \
    org.glassfish.osgihttp.ContextPath=/, \
    osgi.support.multipleHosts=true, \
    org.osgi.service.webcontainer.hostname=127.0.0.1, \
    org.osgi.service.webcontainer.http.port=8080, \
    gosh.args=--nointeractive

# Use these if you want to run on Equinox
# Equinox options
#   osgi.resolverMode=strict, \
#   osgi.compatibility.bootdelegation=false, \

